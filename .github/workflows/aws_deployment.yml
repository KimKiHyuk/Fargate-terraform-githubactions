name: Deploy AWS
on:
  release:
    types:
      - created
  push:
    branches:
      - "main"
      - "master"

jobs:
  Deploy-to-aws:
    name: Deploy to AWS
    runs-on: ubuntu-latest
    steps:
    - 
      name: Checkout
      uses: actions/checkout@v1
    - 
      name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
    - 
      name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - 
      name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: keykim/cloud-computing
        IMAGE_TAG: latest
        ip: ${{ secrets.IP }}
      run: |
        docker build --build-arg ip=$ip -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
    -
      name: Download task definition
      run: |
        aws ecs describe-task-definition --task-definition cloud-computing-staging --query taskDefinition > task-definition.json
    -
      name: Fill task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: cloud-computing
        image: ${{ steps.build-image.outputs.image }}
    - 
      name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: staging
        cluster: cloud-computing-ecs-cluster
        wait-for-service-stability: true
